//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/InputSystem/PlaterInput.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlaterInput : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlaterInput()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlaterInput"",
    ""maps"": [
        {
            ""name"": ""PlayerDefault"",
            ""id"": ""f62a4b92-ef5e-4175-8f4c-c9075429d32c"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""6bc1aaf4-b110-4ff7-891e-5b9fe6f32c4d"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Look"",
                    ""type"": ""Value"",
                    ""id"": ""2690c379-f54d-45be-a724-414123833eb4"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""8c4abdf8-4099-493a-aa1a-129acec7c3df"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Sprint"",
                    ""type"": ""PassThrough"",
                    ""id"": ""980e881e-182c-404c-8cbf-3d09fdb48fef"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Attack"",
                    ""type"": ""Value"",
                    ""id"": ""bb73417b-d49d-47bf-85b9-426875d6ab9f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Interact"",
                    ""type"": ""Button"",
                    ""id"": ""9eb9c0f3-2526-4e7e-886f-22bbc7cb0adf"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Flashlight"",
                    ""type"": ""Button"",
                    ""id"": ""586f367a-2ce8-465a-91b7-fee30fd96553"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Reload"",
                    ""type"": ""Button"",
                    ""id"": ""ccde856e-b575-4577-9aa1-e6fe89e63d76"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""WeaponScroll"",
                    ""type"": ""PassThrough"",
                    ""id"": ""72863a0d-c2aa-4fa6-b480-94fd4652f6e5"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""WeaponKeyInput"",
                    ""type"": ""Button"",
                    ""id"": ""39176a9a-c972-4588-be46-1442ae456c0e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Menu"",
                    ""type"": ""Button"",
                    ""id"": ""21ef0d64-ece3-47f0-a03d-39ecf16f0680"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD"",
                    ""id"": ""b7594ddb-26c9-4ba2-bd5a-901468929edc"",
                    ""path"": ""2DVector(mode=1)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""2063a8b5-6a45-43de-851b-65f3d46e7b58"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""64e4d037-32e1-4fb9-80e4-fc7330404dfe"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""0fce8b11-5eab-4e4e-a741-b732e7b20873"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""7bdda0d6-57a8-47c8-8238-8aecf3110e47"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""up"",
                    ""id"": ""bb94b405-58d3-4998-8535-d705c1218a98"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""929d9071-7dd0-4368-9743-6793bb98087e"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""28abadba-06ff-4d37-bb70-af2f1e35a3b9"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""45f115b6-9b4f-4ba8-b500-b94c93bf7d7e"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""e2f9aa65-db06-4c5b-a2e9-41bc8acb9517"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": ""StickDeadzone"",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ed66cbff-2900-4a62-8896-696503cfcd31"",
                    ""path"": ""<Pointer>/delta"",
                    ""interactions"": """",
                    ""processors"": ""InvertVector2(invertX=false),ScaleVector2(x=0.05,y=0.05)"",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d1d171b6-19d8-47a6-ba3a-71b6a8e7b3c0"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": ""InvertVector2(invertX=false),StickDeadzone,ScaleVector2(x=300,y=300)"",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1bd55a0b-761e-4ae4-89ae-8ec127e08a29"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9f973413-5e27-4239-acee-38c4a63feeba"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dc65b89f-9bd3-43fb-92af-d0d87ba5faa4"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""Sprint"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c8fcd86e-dcfd-4f88-8e93-b638cdbf3320"",
                    ""path"": ""<Gamepad>/leftStickPress"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Sprint"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8462c0e4-0c32-4cde-8df9-81367e564940"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""Attack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""41ce4912-1f33-43ad-a531-185f5feee42b"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Attack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6d537875-4812-48a3-9ec3-4b694f321789"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""564a5231-f993-4b07-9eaa-d5c588e55135"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""13762a52-2b2d-43b0-b252-89c7b27ad4a5"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Flashlight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e7f3239f-3aca-4127-9a80-85cce1733b63"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Reload"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cc27dbae-23f7-4c33-86e3-d799287f459c"",
                    ""path"": ""<Mouse>/scroll/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""WeaponScroll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""385e3b10-4d1b-41bf-be7f-c8e63f73e46e"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": ""Scale"",
                    ""groups"": """",
                    ""action"": ""WeaponKeyInput"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""135e8f3d-5ab1-4eb2-9089-8bed8a779ab0"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": ""Scale(factor=2)"",
                    ""groups"": """",
                    ""action"": ""WeaponKeyInput"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""029e60ca-3a5b-44b7-b963-68dd69e64bca"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": ""Scale(factor=3)"",
                    ""groups"": """",
                    ""action"": ""WeaponKeyInput"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ea1a0df0-63d8-41a7-a167-f23c59081b93"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": ""Scale(factor=4)"",
                    ""groups"": """",
                    ""action"": ""WeaponKeyInput"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f7c1f799-92fb-4d7d-a240-a7e706595c38"",
                    ""path"": ""<Keyboard>/5"",
                    ""interactions"": """",
                    ""processors"": ""Scale(factor=5)"",
                    ""groups"": """",
                    ""action"": ""WeaponKeyInput"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c9e6070a-7722-450a-8ccd-6346c436821b"",
                    ""path"": ""<Keyboard>/6"",
                    ""interactions"": """",
                    ""processors"": ""Scale(factor=6)"",
                    ""groups"": """",
                    ""action"": ""WeaponKeyInput"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4466d6be-3c38-479d-ada2-5742fadfc95e"",
                    ""path"": ""<Keyboard>/7"",
                    ""interactions"": """",
                    ""processors"": ""Scale(factor=7)"",
                    ""groups"": """",
                    ""action"": ""WeaponKeyInput"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""febf1fe3-69ac-4c8c-b4fd-d3d02329d87b"",
                    ""path"": ""<Keyboard>/8"",
                    ""interactions"": """",
                    ""processors"": ""Scale(factor=8)"",
                    ""groups"": """",
                    ""action"": ""WeaponKeyInput"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6840a53d-6086-428e-81fe-0af4aca1c5e2"",
                    ""path"": ""<Keyboard>/9"",
                    ""interactions"": """",
                    ""processors"": ""Scale(factor=9)"",
                    ""groups"": """",
                    ""action"": ""WeaponKeyInput"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4960ced7-4845-4ed2-ace1-5f220bfa09cb"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Menu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Exploring"",
            ""id"": ""b0235bba-c675-40db-8300-1880183dd418"",
            ""actions"": [
                {
                    ""name"": ""CloserInteraction"",
                    ""type"": ""Button"",
                    ""id"": ""a492ccee-87e8-486f-abab-fc9f1e944310"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""StopExploring"",
                    ""type"": ""Button"",
                    ""id"": ""60e8c22f-c42f-4880-bccb-a25d9f9591c7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ObjectExploring"",
                    ""type"": ""Value"",
                    ""id"": ""5c320d7b-52b1-47b4-9c73-61f9b58c80e6"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""5ccd3d18-a7c7-44af-84b9-08af7ba63a85"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CloserInteraction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""aa06d3c9-7ac3-4341-9de2-c9f83963770f"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CloserInteraction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1a8f04c8-9257-4d00-ab02-a130563c15d0"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""StopExploring"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6ef5cd34-f4bb-4187-92c3-97ffaad90917"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""StopExploring"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d4b8aba7-795b-464e-bb43-67ad1b650109"",
                    ""path"": ""<Pointer>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ObjectExploring"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0070ed95-049c-4689-9a20-fa1199ba2a89"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ObjectExploring"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Menu"",
            ""id"": ""41f59371-20ef-4357-8be1-10d60d42c1ac"",
            ""actions"": [
                {
                    ""name"": ""New action"",
                    ""type"": ""Button"",
                    ""id"": ""2f99b7b1-5124-4663-bb53-3a5b5c147329"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""4ed10a3b-f750-460f-aac5-14409d30b699"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""New action"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""KeyboardMouse"",
            ""bindingGroup"": ""KeyboardMouse"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Gamepad"",
            ""bindingGroup"": ""Gamepad"",
            ""devices"": [
                {
                    ""devicePath"": ""<Gamepad>"",
                    ""isOptional"": true,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<XInputController>"",
                    ""isOptional"": true,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<DualShockGamepad>"",
                    ""isOptional"": true,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Xbox Controller"",
            ""bindingGroup"": ""Xbox Controller"",
            ""devices"": []
        },
        {
            ""name"": ""PS4 Controller"",
            ""bindingGroup"": ""PS4 Controller"",
            ""devices"": []
        }
    ]
}");
        // PlayerDefault
        m_PlayerDefault = asset.FindActionMap("PlayerDefault", throwIfNotFound: true);
        m_PlayerDefault_Move = m_PlayerDefault.FindAction("Move", throwIfNotFound: true);
        m_PlayerDefault_Look = m_PlayerDefault.FindAction("Look", throwIfNotFound: true);
        m_PlayerDefault_Jump = m_PlayerDefault.FindAction("Jump", throwIfNotFound: true);
        m_PlayerDefault_Sprint = m_PlayerDefault.FindAction("Sprint", throwIfNotFound: true);
        m_PlayerDefault_Attack = m_PlayerDefault.FindAction("Attack", throwIfNotFound: true);
        m_PlayerDefault_Interact = m_PlayerDefault.FindAction("Interact", throwIfNotFound: true);
        m_PlayerDefault_Flashlight = m_PlayerDefault.FindAction("Flashlight", throwIfNotFound: true);
        m_PlayerDefault_Reload = m_PlayerDefault.FindAction("Reload", throwIfNotFound: true);
        m_PlayerDefault_WeaponScroll = m_PlayerDefault.FindAction("WeaponScroll", throwIfNotFound: true);
        m_PlayerDefault_WeaponKeyInput = m_PlayerDefault.FindAction("WeaponKeyInput", throwIfNotFound: true);
        m_PlayerDefault_Menu = m_PlayerDefault.FindAction("Menu", throwIfNotFound: true);
        // Exploring
        m_Exploring = asset.FindActionMap("Exploring", throwIfNotFound: true);
        m_Exploring_CloserInteraction = m_Exploring.FindAction("CloserInteraction", throwIfNotFound: true);
        m_Exploring_StopExploring = m_Exploring.FindAction("StopExploring", throwIfNotFound: true);
        m_Exploring_ObjectExploring = m_Exploring.FindAction("ObjectExploring", throwIfNotFound: true);
        // Menu
        m_Menu = asset.FindActionMap("Menu", throwIfNotFound: true);
        m_Menu_Newaction = m_Menu.FindAction("New action", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // PlayerDefault
    private readonly InputActionMap m_PlayerDefault;
    private IPlayerDefaultActions m_PlayerDefaultActionsCallbackInterface;
    private readonly InputAction m_PlayerDefault_Move;
    private readonly InputAction m_PlayerDefault_Look;
    private readonly InputAction m_PlayerDefault_Jump;
    private readonly InputAction m_PlayerDefault_Sprint;
    private readonly InputAction m_PlayerDefault_Attack;
    private readonly InputAction m_PlayerDefault_Interact;
    private readonly InputAction m_PlayerDefault_Flashlight;
    private readonly InputAction m_PlayerDefault_Reload;
    private readonly InputAction m_PlayerDefault_WeaponScroll;
    private readonly InputAction m_PlayerDefault_WeaponKeyInput;
    private readonly InputAction m_PlayerDefault_Menu;
    public struct PlayerDefaultActions
    {
        private @PlaterInput m_Wrapper;
        public PlayerDefaultActions(@PlaterInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_PlayerDefault_Move;
        public InputAction @Look => m_Wrapper.m_PlayerDefault_Look;
        public InputAction @Jump => m_Wrapper.m_PlayerDefault_Jump;
        public InputAction @Sprint => m_Wrapper.m_PlayerDefault_Sprint;
        public InputAction @Attack => m_Wrapper.m_PlayerDefault_Attack;
        public InputAction @Interact => m_Wrapper.m_PlayerDefault_Interact;
        public InputAction @Flashlight => m_Wrapper.m_PlayerDefault_Flashlight;
        public InputAction @Reload => m_Wrapper.m_PlayerDefault_Reload;
        public InputAction @WeaponScroll => m_Wrapper.m_PlayerDefault_WeaponScroll;
        public InputAction @WeaponKeyInput => m_Wrapper.m_PlayerDefault_WeaponKeyInput;
        public InputAction @Menu => m_Wrapper.m_PlayerDefault_Menu;
        public InputActionMap Get() { return m_Wrapper.m_PlayerDefault; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerDefaultActions set) { return set.Get(); }
        public void SetCallbacks(IPlayerDefaultActions instance)
        {
            if (m_Wrapper.m_PlayerDefaultActionsCallbackInterface != null)
            {
                @Move.started -= m_Wrapper.m_PlayerDefaultActionsCallbackInterface.OnMove;
                @Move.performed -= m_Wrapper.m_PlayerDefaultActionsCallbackInterface.OnMove;
                @Move.canceled -= m_Wrapper.m_PlayerDefaultActionsCallbackInterface.OnMove;
                @Look.started -= m_Wrapper.m_PlayerDefaultActionsCallbackInterface.OnLook;
                @Look.performed -= m_Wrapper.m_PlayerDefaultActionsCallbackInterface.OnLook;
                @Look.canceled -= m_Wrapper.m_PlayerDefaultActionsCallbackInterface.OnLook;
                @Jump.started -= m_Wrapper.m_PlayerDefaultActionsCallbackInterface.OnJump;
                @Jump.performed -= m_Wrapper.m_PlayerDefaultActionsCallbackInterface.OnJump;
                @Jump.canceled -= m_Wrapper.m_PlayerDefaultActionsCallbackInterface.OnJump;
                @Sprint.started -= m_Wrapper.m_PlayerDefaultActionsCallbackInterface.OnSprint;
                @Sprint.performed -= m_Wrapper.m_PlayerDefaultActionsCallbackInterface.OnSprint;
                @Sprint.canceled -= m_Wrapper.m_PlayerDefaultActionsCallbackInterface.OnSprint;
                @Attack.started -= m_Wrapper.m_PlayerDefaultActionsCallbackInterface.OnAttack;
                @Attack.performed -= m_Wrapper.m_PlayerDefaultActionsCallbackInterface.OnAttack;
                @Attack.canceled -= m_Wrapper.m_PlayerDefaultActionsCallbackInterface.OnAttack;
                @Interact.started -= m_Wrapper.m_PlayerDefaultActionsCallbackInterface.OnInteract;
                @Interact.performed -= m_Wrapper.m_PlayerDefaultActionsCallbackInterface.OnInteract;
                @Interact.canceled -= m_Wrapper.m_PlayerDefaultActionsCallbackInterface.OnInteract;
                @Flashlight.started -= m_Wrapper.m_PlayerDefaultActionsCallbackInterface.OnFlashlight;
                @Flashlight.performed -= m_Wrapper.m_PlayerDefaultActionsCallbackInterface.OnFlashlight;
                @Flashlight.canceled -= m_Wrapper.m_PlayerDefaultActionsCallbackInterface.OnFlashlight;
                @Reload.started -= m_Wrapper.m_PlayerDefaultActionsCallbackInterface.OnReload;
                @Reload.performed -= m_Wrapper.m_PlayerDefaultActionsCallbackInterface.OnReload;
                @Reload.canceled -= m_Wrapper.m_PlayerDefaultActionsCallbackInterface.OnReload;
                @WeaponScroll.started -= m_Wrapper.m_PlayerDefaultActionsCallbackInterface.OnWeaponScroll;
                @WeaponScroll.performed -= m_Wrapper.m_PlayerDefaultActionsCallbackInterface.OnWeaponScroll;
                @WeaponScroll.canceled -= m_Wrapper.m_PlayerDefaultActionsCallbackInterface.OnWeaponScroll;
                @WeaponKeyInput.started -= m_Wrapper.m_PlayerDefaultActionsCallbackInterface.OnWeaponKeyInput;
                @WeaponKeyInput.performed -= m_Wrapper.m_PlayerDefaultActionsCallbackInterface.OnWeaponKeyInput;
                @WeaponKeyInput.canceled -= m_Wrapper.m_PlayerDefaultActionsCallbackInterface.OnWeaponKeyInput;
                @Menu.started -= m_Wrapper.m_PlayerDefaultActionsCallbackInterface.OnMenu;
                @Menu.performed -= m_Wrapper.m_PlayerDefaultActionsCallbackInterface.OnMenu;
                @Menu.canceled -= m_Wrapper.m_PlayerDefaultActionsCallbackInterface.OnMenu;
            }
            m_Wrapper.m_PlayerDefaultActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Move.started += instance.OnMove;
                @Move.performed += instance.OnMove;
                @Move.canceled += instance.OnMove;
                @Look.started += instance.OnLook;
                @Look.performed += instance.OnLook;
                @Look.canceled += instance.OnLook;
                @Jump.started += instance.OnJump;
                @Jump.performed += instance.OnJump;
                @Jump.canceled += instance.OnJump;
                @Sprint.started += instance.OnSprint;
                @Sprint.performed += instance.OnSprint;
                @Sprint.canceled += instance.OnSprint;
                @Attack.started += instance.OnAttack;
                @Attack.performed += instance.OnAttack;
                @Attack.canceled += instance.OnAttack;
                @Interact.started += instance.OnInteract;
                @Interact.performed += instance.OnInteract;
                @Interact.canceled += instance.OnInteract;
                @Flashlight.started += instance.OnFlashlight;
                @Flashlight.performed += instance.OnFlashlight;
                @Flashlight.canceled += instance.OnFlashlight;
                @Reload.started += instance.OnReload;
                @Reload.performed += instance.OnReload;
                @Reload.canceled += instance.OnReload;
                @WeaponScroll.started += instance.OnWeaponScroll;
                @WeaponScroll.performed += instance.OnWeaponScroll;
                @WeaponScroll.canceled += instance.OnWeaponScroll;
                @WeaponKeyInput.started += instance.OnWeaponKeyInput;
                @WeaponKeyInput.performed += instance.OnWeaponKeyInput;
                @WeaponKeyInput.canceled += instance.OnWeaponKeyInput;
                @Menu.started += instance.OnMenu;
                @Menu.performed += instance.OnMenu;
                @Menu.canceled += instance.OnMenu;
            }
        }
    }
    public PlayerDefaultActions @PlayerDefault => new PlayerDefaultActions(this);

    // Exploring
    private readonly InputActionMap m_Exploring;
    private IExploringActions m_ExploringActionsCallbackInterface;
    private readonly InputAction m_Exploring_CloserInteraction;
    private readonly InputAction m_Exploring_StopExploring;
    private readonly InputAction m_Exploring_ObjectExploring;
    public struct ExploringActions
    {
        private @PlaterInput m_Wrapper;
        public ExploringActions(@PlaterInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @CloserInteraction => m_Wrapper.m_Exploring_CloserInteraction;
        public InputAction @StopExploring => m_Wrapper.m_Exploring_StopExploring;
        public InputAction @ObjectExploring => m_Wrapper.m_Exploring_ObjectExploring;
        public InputActionMap Get() { return m_Wrapper.m_Exploring; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(ExploringActions set) { return set.Get(); }
        public void SetCallbacks(IExploringActions instance)
        {
            if (m_Wrapper.m_ExploringActionsCallbackInterface != null)
            {
                @CloserInteraction.started -= m_Wrapper.m_ExploringActionsCallbackInterface.OnCloserInteraction;
                @CloserInteraction.performed -= m_Wrapper.m_ExploringActionsCallbackInterface.OnCloserInteraction;
                @CloserInteraction.canceled -= m_Wrapper.m_ExploringActionsCallbackInterface.OnCloserInteraction;
                @StopExploring.started -= m_Wrapper.m_ExploringActionsCallbackInterface.OnStopExploring;
                @StopExploring.performed -= m_Wrapper.m_ExploringActionsCallbackInterface.OnStopExploring;
                @StopExploring.canceled -= m_Wrapper.m_ExploringActionsCallbackInterface.OnStopExploring;
                @ObjectExploring.started -= m_Wrapper.m_ExploringActionsCallbackInterface.OnObjectExploring;
                @ObjectExploring.performed -= m_Wrapper.m_ExploringActionsCallbackInterface.OnObjectExploring;
                @ObjectExploring.canceled -= m_Wrapper.m_ExploringActionsCallbackInterface.OnObjectExploring;
            }
            m_Wrapper.m_ExploringActionsCallbackInterface = instance;
            if (instance != null)
            {
                @CloserInteraction.started += instance.OnCloserInteraction;
                @CloserInteraction.performed += instance.OnCloserInteraction;
                @CloserInteraction.canceled += instance.OnCloserInteraction;
                @StopExploring.started += instance.OnStopExploring;
                @StopExploring.performed += instance.OnStopExploring;
                @StopExploring.canceled += instance.OnStopExploring;
                @ObjectExploring.started += instance.OnObjectExploring;
                @ObjectExploring.performed += instance.OnObjectExploring;
                @ObjectExploring.canceled += instance.OnObjectExploring;
            }
        }
    }
    public ExploringActions @Exploring => new ExploringActions(this);

    // Menu
    private readonly InputActionMap m_Menu;
    private IMenuActions m_MenuActionsCallbackInterface;
    private readonly InputAction m_Menu_Newaction;
    public struct MenuActions
    {
        private @PlaterInput m_Wrapper;
        public MenuActions(@PlaterInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @Newaction => m_Wrapper.m_Menu_Newaction;
        public InputActionMap Get() { return m_Wrapper.m_Menu; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(MenuActions set) { return set.Get(); }
        public void SetCallbacks(IMenuActions instance)
        {
            if (m_Wrapper.m_MenuActionsCallbackInterface != null)
            {
                @Newaction.started -= m_Wrapper.m_MenuActionsCallbackInterface.OnNewaction;
                @Newaction.performed -= m_Wrapper.m_MenuActionsCallbackInterface.OnNewaction;
                @Newaction.canceled -= m_Wrapper.m_MenuActionsCallbackInterface.OnNewaction;
            }
            m_Wrapper.m_MenuActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Newaction.started += instance.OnNewaction;
                @Newaction.performed += instance.OnNewaction;
                @Newaction.canceled += instance.OnNewaction;
            }
        }
    }
    public MenuActions @Menu => new MenuActions(this);
    private int m_KeyboardMouseSchemeIndex = -1;
    public InputControlScheme KeyboardMouseScheme
    {
        get
        {
            if (m_KeyboardMouseSchemeIndex == -1) m_KeyboardMouseSchemeIndex = asset.FindControlSchemeIndex("KeyboardMouse");
            return asset.controlSchemes[m_KeyboardMouseSchemeIndex];
        }
    }
    private int m_GamepadSchemeIndex = -1;
    public InputControlScheme GamepadScheme
    {
        get
        {
            if (m_GamepadSchemeIndex == -1) m_GamepadSchemeIndex = asset.FindControlSchemeIndex("Gamepad");
            return asset.controlSchemes[m_GamepadSchemeIndex];
        }
    }
    private int m_XboxControllerSchemeIndex = -1;
    public InputControlScheme XboxControllerScheme
    {
        get
        {
            if (m_XboxControllerSchemeIndex == -1) m_XboxControllerSchemeIndex = asset.FindControlSchemeIndex("Xbox Controller");
            return asset.controlSchemes[m_XboxControllerSchemeIndex];
        }
    }
    private int m_PS4ControllerSchemeIndex = -1;
    public InputControlScheme PS4ControllerScheme
    {
        get
        {
            if (m_PS4ControllerSchemeIndex == -1) m_PS4ControllerSchemeIndex = asset.FindControlSchemeIndex("PS4 Controller");
            return asset.controlSchemes[m_PS4ControllerSchemeIndex];
        }
    }
    public interface IPlayerDefaultActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnLook(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnSprint(InputAction.CallbackContext context);
        void OnAttack(InputAction.CallbackContext context);
        void OnInteract(InputAction.CallbackContext context);
        void OnFlashlight(InputAction.CallbackContext context);
        void OnReload(InputAction.CallbackContext context);
        void OnWeaponScroll(InputAction.CallbackContext context);
        void OnWeaponKeyInput(InputAction.CallbackContext context);
        void OnMenu(InputAction.CallbackContext context);
    }
    public interface IExploringActions
    {
        void OnCloserInteraction(InputAction.CallbackContext context);
        void OnStopExploring(InputAction.CallbackContext context);
        void OnObjectExploring(InputAction.CallbackContext context);
    }
    public interface IMenuActions
    {
        void OnNewaction(InputAction.CallbackContext context);
    }
}
